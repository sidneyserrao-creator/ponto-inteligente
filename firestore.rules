rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Funções Auxiliares ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function getUserData(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data;
    }

    function isAdmin() {
      return isAuthenticated() && getUserData(request.auth.uid).role == 'admin';
    }

    function isSupervisor() {
      return isAuthenticated() && getUserData(request.auth.uid).role == 'supervisor';
    }
    
    // --- Regras das Coleções ---

    // 1. Coleção `users`
    match /users/{userId} {
      // LEITURA: O próprio usuário, um admin, ou o supervisor direto do usuário alvo.
      allow read: if isOwner(userId) || isAdmin() || 
                    (isSupervisor() && getUserData(userId).supervisorId == request.auth.uid);

      // CRIAÇÃO: Apenas admins.
      allow create: if isAdmin();

      // ATUALIZAÇÃO: Admins, ou um supervisor atualizando um subordinado.
      allow update: if isAdmin() || 
                      (isSupervisor() && getUserData(userId).supervisorId == request.auth.uid);
                      
      // EXCLUSÃO: Apenas admins.
      allow delete: if isAdmin();
    }

    // 2. Coleção `timeLogs`
    match /timeLogs/{logId} {
      function isLogOwner() { 
        return request.resource.data.userId == request.auth.uid; 
      }
      function getLogOwnerSupervisorId() {
        return getUserData(request.resource.data.userId).supervisorId;
      }

      // LEITURA: Admin, o dono do registro, ou o supervisor do dono.
      allow read: if isAdmin() || isLogOwner() || (isSupervisor() && getLogOwnerSupervisorId() == request.auth.uid);

      // CRIAÇÃO: O usuário pode criar um registro apenas para si mesmo.
      allow create: if request.resource.data.userId == request.auth.uid;

      // ATUALIZAÇÃO: Admins ou o supervisor (para ajustes manuais).
      allow update: if isAdmin() || (isSupervisor() && getLogOwnerSupervisorId() == request.auth.uid);
    }

    // 3. Coleção `payslips`
    match /payslips/{payslipId} {
      // LEITURA: Admin ou o dono do contracheque.
      allow read: if isAdmin() || request.resource.data.userId == request.auth.uid;
      
      // ESCRITA (Criar, Atualizar, Excluir): Apenas admins.
      allow write: if isAdmin();
    }

    // 4. Coleções Gerenciadas pelo Admin
    match /announcements/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    match /workPosts/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    match /workShifts/{docId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    match /occurrences/{docId} {
      allow read: if isAuthenticated();
      // Supervisores também podem criar ocorrências para seus subordinados.
      allow write: if isAdmin() || isSupervisor();
    }

    // 5. Coleção `signatures`
    match /signatures/{signatureId} {
      // LEITURA: Admins e Supervisores.
      allow read: if isAdmin() || isSupervisor();

      // CRIAÇÃO: O usuário pode assinar apenas para si mesmo.
      allow create: if request.resource.data.userId == request.auth.uid;
    }
  }
}
