rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // --- Funções Auxiliares ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function getFirestoreUser(userId) {
      return firestore.get(/databases/(default)/documents/users/$(userId)).data;
    }

    function isAdmin() {
      return isAuthenticated() && getFirestoreUser(request.auth.uid).role == 'admin';
    }

    // 1. Arquivos de Contracheque (Payslips)
    // Caminho seguro: /payslips/{userId}/{fileName}
    match /payslips/{userId}/{allPaths=**} {
      // LEITURA: O dono do contracheque (cujo UID bate com o {userId} no caminho) ou um admin.
      allow read: if isAdmin() || request.auth.uid == userId;
      
      // ESCRITA: Apenas admins podem fazer upload ou deletar contracheques.
      allow write: if isAdmin();
    }

    // 2. Uploads de Fotos (Ponto e Perfil)
    // Caminho: /uploads/{userId}/{fileName}
    match /uploads/{userId}/{allPaths=**} {
      // LEITURA: O dono do arquivo ou um admin.
      allow read: if isAdmin() || request.auth.uid == userId;
      // ESCRITA: Apenas o dono do arquivo pode escrever.
      allow write: if request.auth.uid == userId;
    }

     // 3. Placeholder de usuário
    match /placeholders/{allPaths=**} {
      allow read: if true;
    }
  }
}
